# Edit this file with your answers to the "Designing Regular Expressions"
# problem from Problem Set Seven.
#
# Our regular expression parser understands regular expressions in
# several different formats. For example, the following are all
# equivalent ways of writing the same regular expression, which
# has no particular special meaning and instead just serves to show
# off the parser syntax. :-)
#
#     a⁺ ∪ (ab)* ∪ Σa? ∪ εØ ∪ abc⁷
#     a+ | (ab)* | .a? | _@ | abc^7
#
# More specifically, here's the syntax we support:
#
# • Any character without a special meaning stands for itself.
# • Unions can be written using either | or ∪.
# • ε can be represented as _ or as itself.
# • Ø can be represented as @ or as itself.
# • Σ can be represented as . or as itself.
# • Repeated copies can be specified using superscript numerals
#   (e.g. R² or R³) or using the ^ operator (e.g. R^2 or R^3).
#
# Anything after a hash mark (#) is treated as a comment and is
# ignored.
#
[Part (i)]   # Letters sorted alphabetically
a*b*c*d*e*

[Part (ii)]  # Complement of previous language
Σ*(ed | ec | eb | ea | dc | db | da | cb | ca | ba)Σ*

[Part (iii)] # Legal UNIX paths
(/|(a+/?))(a*|(a+/?))*

[Part (iv)]  # Walking your dog, leash length 2, end at same spot
((y(dy)*d) |
 (d(yd)*y) |
 (yy(d(dy)*y)*dd) |
 (dd(y(yd)*d)*yy)
)* | _

[Part (v)]   # Roman numerals less than 2,000; ε represents 0
(M?
 (C|CC|CCC|CD|D|DC|DCC|DCCC|CM)?
 (X|XX|XXX|XL|L|LX|LXX|LXXX|XC)?
 (I|II|III|IV|V|VI|VII|VIII|IX)?
) | _
